# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: powerocean.proto
# Protobuf Python Version: 5.28.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    0,
    '',
    'powerocean.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10powerocean.proto\"\x9d\x0e\n\x0fHeartbeatReport\x12\x15\n\rbpRemainWatth\x18\x01 \x01(\x02\x12\x11\n\tbpDsgTime\x18\x02 \x01(\r\x12\x16\n\x0erateCtrlSwtich\x18\x03 \x01(\x08\x12\x17\n\x0fsysRateCtrlTime\x18\x04 \x01(\r\x12\x10\n\x08\x64uraTime\x18\x05 \x01(\r\x12\x11\n\tpcsActPwr\x18\n \x01(\x02\x12\x11\n\tpcsAcFreq\x18\x0b \x01(\x02\x12\x12\n\npcsBusVolt\x18\x10 \x01(\x02\x12\x12\n\npcsLeakAmp\x18\x11 \x01(\x02\x12\x0e\n\x06pcsDci\x18\x12 \x01(\x02\x12\x0e\n\x06pcsDcv\x18\x13 \x01(\x02\x12\x12\n\npcsVbusRef\x18  \x01(\x02\x12\x19\n\x11pcsActivePowerRef\x18! \x01(\x02\x12\x1d\n\x15pcsActivePowerLimitUp\x18\" \x01(\x02\x12\x1d\n\x15pcsActivePowerLimitDn\x18# \x01(\x02\x12\x12\n\npcsBpPower\x18$ \x01(\x02\x12\x1a\n\x12pcsBpPowerChgLimit\x18% \x01(\x02\x12\x19\n\x11pcsRelayStateShow\x18& \x01(\x02\x12\x1f\n\x17pcsGridSafetyFuncRecord\x18\' \x01(\x02\x12 \n\x18pcsGridSafetyStateRecord\x18( \x01(\x02\x12\x1a\n\x12pcsGridInvErrorRms\x18) \x01(\x02\x12\x15\n\rpcsPfcCurReal\x18* \x01(\x02\x12\x14\n\x0cpcsPfcCurRef\x18+ \x01(\x02\x12\x1b\n\x13pcsReactivePowerRef\x18, \x01(\x02\x12\x15\n\rpcsMeterPower\x18- \x01(\x02\x12\x1d\n\x15pcsCommInterfaceState\x18. \x01(\x02\x12\x19\n\x11pcsAverageVoltage\x18/ \x01(\x02\x12\x13\n\x0bpcsVgridThd\x18\x30 \x01(\x02\x12!\n\x19pcsInterruptOccupancyRate\x18\x31 \x01(\x02\x12\x1d\n\x15\x65msMpptSelfcheckState\x18\x32 \x01(\x02\x12\x1b\n\x13\x65msMpptStartupState\x18\x33 \x01(\r\x12\x1b\n\x13\x65msBpSelfcheckState\x18\x34 \x01(\r\x12\x19\n\x11\x65msBpStartupState\x18\x35 \x01(\r\x12\x1c\n\x14\x65msPcsSelfcheckState\x18\x36 \x01(\r\x12\x1a\n\x12\x65msPcsStartupState\x18\x37 \x01(\r\x12\x12\n\nemsBusVolt\x18\x38 \x01(\x02\x12\x1b\n\x13\x65msActiveOffGridCmd\x18\x39 \x01(\r\x12\x15\n\remsBpAliveNum\x18: \x01(\r\x12\x12\n\nemsBpPower\x18; \x01(\x02\x12\x10\n\x08\x65msBpChg\x18< \x01(\x02\x12\x10\n\x08\x65msBpDsg\x18= \x01(\x02\x12\x17\n\x0f\x65msBpChgRequest\x18> \x01(\r\x12\x16\n\x0e\x65msSelfUsedCnt\x18? \x01(\r\x12\x1d\n\x15\x65msAcMakeupTriggleSoc\x18@ \x01(\r\x12\x1a\n\x12\x65msAcMakeupExitSoc\x18\x41 \x01(\r\x12\x19\n\x11\x65msAcMakeupMinSoc\x18\x42 \x01(\r\x12\x16\n\x0e\x65msAcMakeupCnt\x18\x43 \x01(\r\x12\x18\n\x10\x65msStartFsmState\x18\x44 \x01(\r\x12\x17\n\x0f\x65msMpptRunState\x18\x45 \x01(\r\x12\x16\n\x0e\x65msMpptModStat\x18\x46 \x01(\r\x12\x12\n\nemsStopCmd\x18G \x01(\r\x12\x11\n\temsSysCfg\x18H \x01(\r\x12\x12\n\nemsLpState\x18I \x01(\r\x12\x11\n\temsLpType\x18J \x01(\r\x12\x14\n\x0c\x65msLpMpptCnt\x18K \x01(\r\x12\x12\n\nemsLpBpCnt\x18L \x01(\r\x12\x16\n\x0e\x65msLpStateFlag\x18M \x01(\r\x12\x18\n\x10\x65msSocCalibState\x18N \x01(\r\x12\x1a\n\x12\x65msSocCalibRequest\x18O \x01(\r\x12\x16\n\x0e\x65msMpptHbState\x18P \x01(\r\x12\x15\n\remsNtcTempMax\x18Q \x01(\x02\x12\x1f\n\x17\x65msBusVoltErrSlidFilter\x18R \x01(\x02\x12\x18\n\x10\x65msBusVoltRipple\x18S \x01(\x02\x12\x13\n\x0b\x65msPvInvPwr\x18T \x01(\x02\x12\x15\n\rmpptBusVolRef\x18\x64 \x01(\x02\x12\x15\n\rdcdcBusVolRef\x18\x65 \x01(\x02\x12\x11\n\tdcdcBpVol\x18\x66 \x01(\x02\x12\x1a\n\x12\x64\x63\x64\x63InductanceCurr\x18g \x01(\x02\x12\x18\n\x10innerTemperature\x18h \x01(\x02\x12\x16\n\x0epowerLimitMode\x18i \x01(\r\x12\x15\n\rinvRatedPower\x18j \x01(\r\x12\x17\n\x0f\x64\x63\x64\x63StateRecord\x18k \x01(\r\x12\x13\n\x0b\x65msWorkMode\x18l \x01(\r\x12\x14\n\x0cpcsBackupPwr\x18m \x01(\x02\"\xfe\x01\n\x11\x42pHeartbeatReport\x12\x0f\n\x07\x62ytes_1\x18\x01 \x03(\x05\x12\r\n\x05int_2\x18\x02 \x01(\x05\x12\r\n\x05int_3\x18\x03 \x01(\x05\x12\r\n\x05int_4\x18\x04 \x01(\x05\x12\r\n\x05int_5\x18\x05 \x01(\x05\x12\r\n\x05int_6\x18\x06 \x01(\x05\x12\r\n\x05int_7\x18\x07 \x01(\x05\x12\r\n\x05int_8\x18\x08 \x01(\x05\x12\r\n\x05int_9\x18\t \x01(\x05\x12\x0e\n\x06int_10\x18\n \x01(\x05\x12\x0e\n\x06int_14\x18\x0b \x01(\x05\x12\x0e\n\x06int_15\x18\x0c \x01(\x05\x12\x0e\n\x06int_16\x18\r \x01(\x05\x12\x0e\n\x06int_17\x18\x0e \x01(\x05\x12\x10\n\x08moduleSn\x18\x0f \x01(\t\"\x96\x03\n\x0c\x43hangeReport\x12\r\n\x05pdata\x18\x01 \x01(\x0c\x12\x0b\n\x03src\x18\x02 \x01(\r\x12\x0c\n\x04\x64\x65st\x18\x03 \x01(\r\x12\r\n\x05\x64_src\x18\x04 \x01(\r\x12\x0e\n\x06\x64_dest\x18\x05 \x01(\r\x12\x0f\n\x07\x65ncType\x18\x06 \x01(\r\x12\x11\n\tcheckType\x18\x07 \x01(\r\x12\x0f\n\x07\x63mdFunc\x18\x08 \x01(\r\x12\r\n\x05\x63mdId\x18\t \x01(\r\x12\x0f\n\x07\x64\x61taLen\x18\n \x01(\r\x12\x0f\n\x07needAck\x18\x0b \x01(\r\x12\r\n\x05isAck\x18\x0c \x01(\r\x12\x0b\n\x03seq\x18\x0e \x01(\r\x12\x11\n\tproductId\x18\x0f \x01(\r\x12\x0f\n\x07version\x18\x10 \x01(\r\x12\x12\n\npayloadVer\x18\x11 \x01(\r\x12\x10\n\x08timeSnap\x18\x12 \x01(\r\x12\x0f\n\x07isRwCmd\x18\x13 \x01(\r\x12\x0f\n\x07isQueue\x18\x14 \x01(\r\x12\x0f\n\x07\x61\x63kType\x18\x15 \x01(\r\x12\x0c\n\x04\x63ode\x18\x16 \x01(\t\x12\x0c\n\x04\x66rom\x18\x17 \x01(\t\x12\x10\n\x08moduleSn\x18\x18 \x01(\t\x12\x10\n\x08\x64\x65viceSn\x18\x19 \x01(\t\"\x1c\n\x1a\x45nergyStreamReportParallelb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'powerocean_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_HEARTBEATREPORT']._serialized_start=21
  _globals['_HEARTBEATREPORT']._serialized_end=1842
  _globals['_BPHEARTBEATREPORT']._serialized_start=1845
  _globals['_BPHEARTBEATREPORT']._serialized_end=2099
  _globals['_CHANGEREPORT']._serialized_start=2102
  _globals['_CHANGEREPORT']._serialized_end=2508
  _globals['_ENERGYSTREAMREPORTPARALLEL']._serialized_start=2510
  _globals['_ENERGYSTREAMREPORTPARALLEL']._serialized_end=2538
# @@protoc_insertion_point(module_scope)
